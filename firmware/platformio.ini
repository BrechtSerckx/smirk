; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
; Support multiple main files. The main file is 'main.ENV_NAME.cpp', and can be selected by setting the target.
; Taken from https://community.platformio.org/t/here-is-a-simple-way-to-have-many-small-main-apps/26009
src_filter = +<*.h> +<main.${PIOENV}.cpp>
; Inject SSID and password from env
build_flags =
    -D SERIAL_BAUD_RATE="${sysenv.SMIRK_MONITOR_SPEED}"
    -D WIFI_SSID="${sysenv.SMIRK_WIFI_SSID}"
    -D WIFI_PASSWORD="${sysenv.SMIRK_WIFI_PASSWORD}"
    -D AP_SSID="${sysenv.SMIRK_AP_SSID}"
    -D AP_PASSWORD="${sysenv.SMIRK_AP_PASSWORD}"
    -D RESET_WIFI="${sysenv.SMIRK_RESET_WIFI}"
    -D SERVER_PROTOCOL="${sysenv.SMIRK_SERVER_PROTOCOL}"
    -D SERVER_ADDRESS="${sysenv.SMIRK_SERVER_ADDRESS}"
    -D NODE_ID="${sysenv.SMIRK_NODE_ID}"
; Deep dependency scan
lib_ldf_mode = deep
; Monitor baud rate
monitor_speed = ${sysenv.SMIRK_MONITOR_SPEED}

[board:adafruit_feather_esp32_v2]
platform = espressif32
framework = arduino
board = adafruit_feather_esp32_v2

[dependencies]
ESPAsyncWebServer = me-no-dev/ESP Async WebServer @ ^1.2.3
IRremoteESP8266 = crankyoldgit/IRremoteESP8266 @ ^2.8.6
ArduinoJson = bblanchon/ArduinoJson @ ^6.21.3
WiFiManager = https://github.com/tzapu/WiFiManager.git#v2.0.16-rc.2

[env:Blink]
extends = board:adafruit_feather_esp32_v2

[env:WiFiScan]
extends = board:adafruit_feather_esp32_v2

[env:SimpleServer]
extends = board:adafruit_feather_esp32_v2
lib_deps = ${dependencies.ESPAsyncWebServer}

[env:HelloServer]
extends = board:adafruit_feather_esp32_v2

[env:WifiManagerBasic]
extends = board:adafruit_feather_esp32_v2
lib_deps =
  ${dependencies.WiFiManager}

[env:WifiManagerAdvanced]
extends = board:adafruit_feather_esp32_v2
lib_deps =
  ${dependencies.WiFiManager}

[env:BasicHttpClient]
extends = board:adafruit_feather_esp32_v2

[env:Smirk]
extends = board:adafruit_feather_esp32_v2
lib_deps =
  Smirk
  IRremoteESP8266
  ${dependencies.ArduinoJson}
  ${dependencies.WiFiManager}
  ${dependencies.ESPAsyncWebServer}

[env:Test]
platform = native
test_framework = googletest
lib_deps =
  Smirk
  ArduinoFake
  ${dependencies.ArduinoJson}